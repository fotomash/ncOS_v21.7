{
  "agent_registry_strategy_update.yaml": {
    "path": "agent_registry_strategy_update.yaml",
    "category": "agents",
    "config": {
      "strategy_agents": {
        "micro_wyckoff_event": {
          "class": "MicroWyckoffEventAgent",
          "config_file": "config/strategies/micro_wyckoff_event.yaml",
          "dependencies": [
            "master_orchestrator",
            "risk_guardian"
          ],
          "enabled": true,
          "max_positions": 1,
          "module": "agents.micro_wyckoff_event",
          "priority": 10,
          "risk_per_trade": 0.01,
          "risk_profile": "precision",
          "timeframes": [
            "tick",
            "M1"
          ],
          "triggers": [
            "tick_event_scored",
            "micro_wyckoff_signal"
          ],
          "type": "tick_analysis"
        },
        "orderflow_anomaly": {
          "class": "OrderflowAnomalyAgent",
          "config_file": "config/strategies/orderflow_anomaly.yaml",
          "dependencies": [
            "master_orchestrator",
            "liquidity_sniper"
          ],
          "enabled": true,
          "max_positions": 1,
          "module": "agents.orderflow_anomaly",
          "priority": 11,
          "risk_per_trade": 0.015,
          "risk_profile": "defensive",
          "timeframes": [
            "M1",
            "M5"
          ],
          "triggers": [
            "orderflow_anomaly_detected",
            "volume_spike"
          ],
          "type": "orderflow_analysis"
        },
        "protection_reentry": {
          "class": "ProtectionReentryAgent",
          "config_file": "config/strategies/protection_reentry.yaml",
          "dependencies": [
            "risk_guardian",
            "session_state_manager"
          ],
          "enabled": true,
          "max_positions": 3,
          "module": "agents.protection_reentry",
          "priority": 12,
          "risk_per_trade": 0.01,
          "risk_profile": "protective",
          "timeframes": [
            "M1",
            "M5"
          ],
          "triggers": [
            "stop_loss_hit",
            "reentry_opportunity"
          ],
          "type": "risk_management"
        },
        "session_sweep_reversal": {
          "class": "SessionSweepReversalAgent",
          "config_file": "config/strategies/session_sweep_reversal.yaml",
          "dependencies": [
            "master_orchestrator",
            "entry_executor_smc"
          ],
          "enabled": true,
          "max_positions": 2,
          "module": "agents.session_sweep_reversal",
          "priority": 9,
          "risk_per_trade": 0.02,
          "risk_profile": "moderate",
          "timeframes": [
            "M5",
            "M1"
          ],
          "triggers": [
            "session_open",
            "sweep_reversal_signal"
          ],
          "type": "session_trading"
        },
        "smc_liquidity_trap": {
          "class": "SMCLiquidityTrapAgent",
          "config_file": "config/strategies/smc_liquidity_trap.yaml",
          "dependencies": [
            "master_orchestrator",
            "liquidity_sniper",
            "risk_guardian"
          ],
          "enabled": true,
          "max_positions": 2,
          "module": "agents.smc_liquidity_trap",
          "priority": 7,
          "risk_per_trade": 0.025,
          "risk_profile": "aggressive",
          "timeframes": [
            "M1",
            "M5"
          ],
          "triggers": [
            "liquidity_trap_detected",
            "engineered_liquidity_signal"
          ],
          "type": "smc_execution"
        },
        "wyckoff_phase_cycle": {
          "class": "WyckoffPhaseCycleAgent",
          "config_file": "config/strategies/wyckoff_phase_cycle.yaml",
          "dependencies": [
            "master_orchestrator",
            "session_state_manager"
          ],
          "enabled": true,
          "max_positions": 1,
          "module": "agents.wyckoff_phase_cycle",
          "priority": 8,
          "risk_per_trade": 0.015,
          "risk_profile": "conservative",
          "timeframes": [
            "H1",
            "M15",
            "M5"
          ],
          "triggers": [
            "phase_transition_detected",
            "accumulation_signal"
          ],
          "type": "wyckoff_analysis"
        }
      }
    }
  },
  "enhanced_agent_registry_complete.yaml": {
    "path": "enhanced_agent_registry_complete.yaml",
    "category": "agents",
    "config": {
      "enhanced_ncos_agents": {
        "master_orchestrator": {
          "class": "MasterOrchestrator",
          "enabled": true,
          "enhancements": [
            "zanflow_integration",
            "vector_data_access",
            "knowledge_base_connection"
          ],
          "module": "agents.master_orchestrator",
          "priority": 1,
          "type": "coordination"
        },
        "session_state_manager": {
          "class": "SessionStateManager",
          "enabled": true,
          "enhancements": [
            "conversation_flow",
            "enhanced_persistence",
            "interaction_tracking"
          ],
          "module": "agents.session_state_manager",
          "priority": 2,
          "type": "state_management"
        }
      }
    }
  },
  "config/drift_detection_agent_config.yaml": {
    "path": "config/drift_detection_agent_config.yaml",
    "category": "agents",
    "config": {
      "settings": {}
    }
  },
  "config/agent_registry.yaml": {
    "path": "config/agent_registry.yaml",
    "category": "agents",
    "config": {
      "version": "21.7.0",
      "agents": {
        "CoreSystemAgent": {
          "profile_path": "agents/coresystemagent_profile.yaml",
          "enabled": true,
          "priority": 1
        },
        "MarketDataCaptain": {
          "profile_path": "agents/marketdatacaptain_profile.yaml",
          "enabled": true,
          "priority": 1
        },
        "PortfolioManager": {
          "profile_path": "agents/portfoliomanager_profile.yaml",
          "enabled": true,
          "priority": 1
        },
        "SignalProcessor": {
          "profile_path": "agents/signalprocessor_profile.yaml",
          "enabled": true,
          "priority": 1
        },
        "VoiceCommandAgent": {
          "profile_path": "agents/voicecommandagent_profile.yaml",
          "enabled": true,
          "priority": 1
        },
        "RiskManager": {
          "profile_path": "agents/riskmanager_profile.yaml",
          "enabled": true,
          "priority": 1
        }
      }
    }
  },
  "config/coresystemagent_config.yaml": {
    "path": "config/coresystemagent_config.yaml",
    "category": "agents",
    "config": {
      "agent": {
        "name": "CoreSystemAgent",
        "version": "21.7.0",
        "enabled": true
      },
      "settings": {
        "log_level": "INFO",
        "health_check_interval": 60,
        "max_retries": 3,
        "startup_delay": 5,
        "shutdown_timeout": 30
      }
    }
  },
  "config/voicecommandagent_config.yaml": {
    "path": "config/voicecommandagent_config.yaml",
    "category": "agents",
    "config": {
      "agent": {
        "name": "VoiceCommandAgent",
        "version": "21.7.0",
        "enabled": true
      },
      "settings": {
        "wake_word": "ncos",
        "language": "en-US",
        "confidence_threshold": 0.7,
        "max_command_length": 100,
        "timeout": 5
      }
    }
  },
  "config/risk_monitor_agent_config.yaml": {
    "path": "config/risk_monitor_agent_config.yaml",
    "category": "agents",
    "config": {
      "settings": {}
    }
  },
  "config/divergence_strategy_agent_config.yaml": {
    "path": "config/divergence_strategy_agent_config.yaml",
    "category": "agents",
    "config": {
      "settings": {}
    }
  },
  "config/compliance_agent_config.yaml": {
    "path": "config/compliance_agent_config.yaml",
    "category": "agents",
    "config": {
      "settings": {}
    }
  },
  "config/market_manipulation_agent_config.yaml": {
    "path": "config/market_manipulation_agent_config.yaml",
    "category": "agents",
    "config": {
      "settings": {}
    }
  },
  "config/agents/riskmanager_profile.yaml": {
    "path": "config/agents/riskmanager_profile.yaml",
    "category": "agents",
    "config": {
      "profile_name": "RiskManager",
      "description": "Risk management and position monitoring",
      "version": "21.7.0",
      "execution_sequence": [
        "risk_assessment",
        "position_monitor",
        "alert_generator"
      ],
      "code_map": {
        "risk_assessment": "ncos.risk.assessment.RiskAssessment",
        "position_monitor": "ncos.risk.monitor.PositionMonitor",
        "alert_generator": "ncos.risk.alerts.AlertGenerator"
      },
      "meta_agent": {
        "agent_id": "NCOS_Risk_001",
        "strategy_tags": [
          "Risk",
          "Monitor",
          "Alert"
        ],
        "llm_contextualization_enabled": false
      },
      "settings": {
        "log_level": "WARNING",
        "alert_threshold": 0.8,
        "emergency_close_threshold": 0.95,
        "max_drawdown": 0.2,
        "daily_loss_limit": 0.06,
        "correlation_threshold": 0.7,
        "var_confidence": 0.95
      }
    }
  },
  "config/agents/coresystemagent_profile.yaml": {
    "path": "config/agents/coresystemagent_profile.yaml",
    "category": "agents",
    "config": {
      "profile_name": "CoreSystemAgent",
      "description": "Core system orchestration and health monitoring",
      "version": "21.7.0",
      "execution_sequence": [
        "health_check",
        "system_monitor",
        "log_aggregator"
      ],
      "code_map": {
        "health_check": "ncos.core.health_check.HealthChecker",
        "system_monitor": "ncos.core.system_monitor.SystemMonitor",
        "log_aggregator": "ncos.core.log_aggregator.LogAggregator"
      },
      "meta_agent": {
        "agent_id": "NCOS_Core_001",
        "strategy_tags": [
          "System",
          "Health",
          "Monitoring"
        ],
        "llm_contextualization_enabled": false
      },
      "settings": {
        "log_level": "INFO",
        "health_check_interval": 60,
        "max_retries": 3,
        "startup_delay": 5,
        "shutdown_timeout": 30
      }
    }
  },
  "config/agents/marketdatacaptain_profile.yaml": {
    "path": "config/agents/marketdatacaptain_profile.yaml",
    "category": "agents",
    "config": {
      "profile_name": "MarketDataCaptain",
      "description": "Real-time market data ingestion and processing",
      "version": "21.7.0",
      "execution_sequence": [
        "data_ingestion",
        "tick_processor",
        "spread_tracker"
      ],
      "code_map": {
        "data_ingestion": "ncos.data.ingestion.DataIngestion",
        "tick_processor": "ncos.data.tick_processor.TickProcessor",
        "spread_tracker": "ncos.data.spread_tracker.SpreadTracker"
      },
      "meta_agent": {
        "agent_id": "NCOS_Market_001",
        "strategy_tags": [
          "Market",
          "Data",
          "RealTime"
        ],
        "llm_contextualization_enabled": true
      },
      "data_enricher": {
        "enabled": true,
        "spread_settings": {
          "enabled": true,
          "window_size": 25,
          "high_vol_baseline": 0.0008
        },
        "tick_context_settings": {
          "enable_tick_merge": true,
          "journal_tick_context": true
        }
      },
      "settings": {
        "symbols": [
          "XAUUSD",
          "EURUSD",
          "GBPUSD"
        ],
        "timeframes": [
          "M1",
          "M5",
          "M15",
          "H1",
          "H4"
        ],
        "data_source": "live",
        "update_frequency": 1,
        "buffer_size": 1000,
        "flush_interval": 10
      }
    }
  },
  "config/agents/portfoliomanager_profile.yaml": {
    "path": "config/agents/portfoliomanager_profile.yaml",
    "category": "agents",
    "config": {
      "profile_name": "PortfolioManager",
      "description": "Portfolio optimization and position management",
      "version": "21.7.0",
      "execution_sequence": [
        "risk_calculator",
        "position_sizer",
        "portfolio_optimizer"
      ],
      "code_map": {
        "risk_calculator": "ncos.portfolio.risk_calculator.RiskCalculator",
        "position_sizer": "ncos.portfolio.position_sizer.PositionSizer",
        "portfolio_optimizer": "ncos.portfolio.optimizer.PortfolioOptimizer"
      },
      "meta_agent": {
        "agent_id": "NCOS_Portfolio_001",
        "strategy_tags": [
          "Portfolio",
          "Risk",
          "Optimization"
        ],
        "llm_contextualization_enabled": true
      },
      "risk_manager": {
        "enabled": true,
        "max_risk_per_trade": 0.01
      },
      "settings": {
        "max_positions": 10,
        "risk_per_trade": 0.01,
        "max_daily_risk": 0.05,
        "position_sizing_method": "fixed_fractional",
        "rebalance_interval": 3600,
        "risk_check_interval": 300
      }
    }
  },
  "config/agents/voicecommandagent_profile.yaml": {
    "path": "config/agents/voicecommandagent_profile.yaml",
    "category": "agents",
    "config": {
      "profile_name": "VoiceCommandAgent",
      "description": "Natural language voice command processing",
      "version": "21.7.0",
      "execution_sequence": [
        "voice_parser",
        "command_router",
        "response_generator"
      ],
      "code_map": {
        "voice_parser": "ncos.voice.voice_tag_parser.VoiceTagParser",
        "command_router": "ncos.voice.llm_orchestrator.CommandRouter",
        "response_generator": "ncos.voice.response_generator.ResponseGenerator"
      },
      "meta_agent": {
        "agent_id": "NCOS_Voice_001",
        "strategy_tags": [
          "Voice",
          "NLP",
          "Interface"
        ],
        "llm_contextualization_enabled": true
      },
      "settings": {
        "wake_word": "ncos",
        "language": "en-US",
        "confidence_threshold": 0.7,
        "max_command_length": 100,
        "timeout": 5
      }
    }
  },
  "config/agents/signalprocessor_profile.yaml": {
    "path": "config/agents/signalprocessor_profile.yaml",
    "category": "agents",
    "config": {
      "profile_name": "SignalProcessor",
      "description": "Trading signal processing and validation",
      "version": "21.7.0",
      "execution_sequence": [
        "context_analyzer",
        "liquidity_engine",
        "structure_validator",
        "fvg_locator",
        "confluence_stacker"
      ],
      "code_map": {
        "context_analyzer": "ncos.signals.context_analyzer.ContextAnalyzer",
        "liquidity_engine": "ncos.signals.liquidity_engine.LiquidityEngine",
        "structure_validator": "ncos.signals.structure_validator.StructureValidator",
        "fvg_locator": "ncos.signals.fvg_locator.FVGLocator",
        "confluence_stacker": "ncos.signals.confluence_stacker.ConfluenceStacker"
      },
      "meta_agent": {
        "agent_id": "NCOS_Signal_001",
        "strategy_tags": [
          "Signal",
          "Analysis",
          "Validation"
        ],
        "llm_contextualization_enabled": true,
        "memory_embedding_strategy": "on_signal_zbar_summary"
      },
      "context_analyzer": {
        "enabled": true,
        "bias_determination_timeframes": [
          "H1",
          "H4"
        ]
      },
      "liquidity_engine": {
        "enabled": true,
        "lookback_period": 100
      },
      "structure_validator": {
        "enabled": true,
        "swing_engine_config": {
          "swing_n": 1,
          "break_on_close": true
        }
      },
      "settings": {
        "min_confidence": 0.7,
        "signal_types": [
          "entry",
          "exit",
          "adjustment"
        ],
        "cooldown_period": 300,
        "confirmation_required": true,
        "queue_size": 100,
        "processing_threads": 4
      },
      "journaling": {
        "verbosity": "detailed",
        "enable_zbar_format": true,
        "log_directory": "/logs/signals/"
      }
    }
  },
  "agents/predictive/config/predictive_engine_config.yaml": {
    "path": "agents/predictive/config/predictive_engine_config.yaml",
    "category": "agents",
    "config": {
      "engine": {
        "name": "Neural Predictive Engine",
        "version": "21.7",
        "mode": "enhanced",
        "neural_depth": 5,
        "pattern_matching": {
          "enabled": true,
          "min_confidence": 0.75,
          "max_patterns": 1000
        }
      },
      "models": {
        "primary": {
          "type": "transformer",
          "parameters": {
            "layers": 12,
            "hidden_size": 768,
            "attention_heads": 12
          }
        },
        "secondary": {
          "type": "lstm",
          "parameters": {
            "units": 512,
            "dropout": 0.2
          }
        }
      },
      "prediction_params": {
        "time_window": "24h",
        "update_frequency": "5m",
        "confidence_threshold": 0.8,
        "max_predictions": 100
      },
      "data_sources": {
        "system_metrics": {
          "enabled": true,
          "sampling_rate": "1s"
        },
        "user_behavior": {
          "enabled": true,
          "anonymized": true
        },
        "external_feeds": {
          "enabled": false,
          "sources": []
        }
      },
      "output": {
        "format": "structured",
        "include_confidence": true,
        "include_reasoning": true
      },
      "optimization": {
        "caching": {
          "enabled": true,
          "ttl": 3600
        },
        "batch_processing": {
          "enabled": true,
          "batch_size": 32
        }
      },
      "logging": {
        "level": "INFO",
        "destinations": [
          "file",
          "monitoring"
        ],
        "rotation": {
          "enabled": true,
          "max_size": "100MB",
          "max_files": 5
        }
      },
      "journaling": {
        "enabled": true,
        "path": "/var/log/ncOS/predictive",
        "format": "structured_json",
        "retention_days": 30
      },
      "data_enrichment": {
        "metadata_extraction": true,
        "pattern_analysis": true,
        "anomaly_detection": true
      }
    }
  },
  "consolidated_config/agents_consolidated.json": {
    "path": "consolidated_config/agents_consolidated.json",
    "category": "agents",
    "config": {
      "agent_registry_strategy_update.yaml": {
        "path": "agent_registry_strategy_update.yaml",
        "category": "agents",
        "config": {
          "strategy_agents": {
            "micro_wyckoff_event": {
              "class": "MicroWyckoffEventAgent",
              "config_file": "config/strategies/micro_wyckoff_event.yaml",
              "dependencies": [
                "master_orchestrator",
                "risk_guardian"
              ],
              "enabled": true,
              "max_positions": 1,
              "module": "agents.micro_wyckoff_event",
              "priority": 10,
              "risk_per_trade": 0.01,
              "risk_profile": "precision",
              "timeframes": [
                "tick",
                "M1"
              ],
              "triggers": [
                "tick_event_scored",
                "micro_wyckoff_signal"
              ],
              "type": "tick_analysis"
            },
            "orderflow_anomaly": {
              "class": "OrderflowAnomalyAgent",
              "config_file": "config/strategies/orderflow_anomaly.yaml",
              "dependencies": [
                "master_orchestrator",
                "liquidity_sniper"
              ],
              "enabled": true,
              "max_positions": 1,
              "module": "agents.orderflow_anomaly",
              "priority": 11,
              "risk_per_trade": 0.015,
              "risk_profile": "defensive",
              "timeframes": [
                "M1",
                "M5"
              ],
              "triggers": [
                "orderflow_anomaly_detected",
                "volume_spike"
              ],
              "type": "orderflow_analysis"
            },
            "protection_reentry": {
              "class": "ProtectionReentryAgent",
              "config_file": "config/strategies/protection_reentry.yaml",
              "dependencies": [
                "risk_guardian",
                "session_state_manager"
              ],
              "enabled": true,
              "max_positions": 3,
              "module": "agents.protection_reentry",
              "priority": 12,
              "risk_per_trade": 0.01,
              "risk_profile": "protective",
              "timeframes": [
                "M1",
                "M5"
              ],
              "triggers": [
                "stop_loss_hit",
                "reentry_opportunity"
              ],
              "type": "risk_management"
            },
            "session_sweep_reversal": {
              "class": "SessionSweepReversalAgent",
              "config_file": "config/strategies/session_sweep_reversal.yaml",
              "dependencies": [
                "master_orchestrator",
                "entry_executor_smc"
              ],
              "enabled": true,
              "max_positions": 2,
              "module": "agents.session_sweep_reversal",
              "priority": 9,
              "risk_per_trade": 0.02,
              "risk_profile": "moderate",
              "timeframes": [
                "M5",
                "M1"
              ],
              "triggers": [
                "session_open",
                "sweep_reversal_signal"
              ],
              "type": "session_trading"
            },
            "smc_liquidity_trap": {
              "class": "SMCLiquidityTrapAgent",
              "config_file": "config/strategies/smc_liquidity_trap.yaml",
              "dependencies": [
                "master_orchestrator",
                "liquidity_sniper",
                "risk_guardian"
              ],
              "enabled": true,
              "max_positions": 2,
              "module": "agents.smc_liquidity_trap",
              "priority": 7,
              "risk_per_trade": 0.025,
              "risk_profile": "aggressive",
              "timeframes": [
                "M1",
                "M5"
              ],
              "triggers": [
                "liquidity_trap_detected",
                "engineered_liquidity_signal"
              ],
              "type": "smc_execution"
            },
            "wyckoff_phase_cycle": {
              "class": "WyckoffPhaseCycleAgent",
              "config_file": "config/strategies/wyckoff_phase_cycle.yaml",
              "dependencies": [
                "master_orchestrator",
                "session_state_manager"
              ],
              "enabled": true,
              "max_positions": 1,
              "module": "agents.wyckoff_phase_cycle",
              "priority": 8,
              "risk_per_trade": 0.015,
              "risk_profile": "conservative",
              "timeframes": [
                "H1",
                "M15",
                "M5"
              ],
              "triggers": [
                "phase_transition_detected",
                "accumulation_signal"
              ],
              "type": "wyckoff_analysis"
            }
          }
        }
      },
      "enhanced_agent_registry_complete.yaml": {
        "path": "enhanced_agent_registry_complete.yaml",
        "category": "agents",
        "config": {
          "enhanced_ncos_agents": {
            "master_orchestrator": {
              "class": "MasterOrchestrator",
              "enabled": true,
              "enhancements": [
                "zanflow_integration",
                "vector_data_access",
                "knowledge_base_connection"
              ],
              "module": "agents.master_orchestrator",
              "priority": 1,
              "type": "coordination"
            },
            "session_state_manager": {
              "class": "SessionStateManager",
              "enabled": true,
              "enhancements": [
                "conversation_flow",
                "enhanced_persistence",
                "interaction_tracking"
              ],
              "module": "agents.session_state_manager",
              "priority": 2,
              "type": "state_management"
            }
          }
        }
      },
      "config/drift_detection_agent_config.yaml": {
        "path": "config/drift_detection_agent_config.yaml",
        "category": "agents",
        "config": {
          "settings": {}
        }
      },
      "config/agent_registry.yaml": {
        "path": "config/agent_registry.yaml",
        "category": "agents",
        "config": {
          "version": "21.7.0",
          "agents": {
            "CoreSystemAgent": {
              "profile_path": "agents/coresystemagent_profile.yaml",
              "enabled": true,
              "priority": 1
            },
            "MarketDataCaptain": {
              "profile_path": "agents/marketdatacaptain_profile.yaml",
              "enabled": true,
              "priority": 1
            },
            "PortfolioManager": {
              "profile_path": "agents/portfoliomanager_profile.yaml",
              "enabled": true,
              "priority": 1
            },
            "SignalProcessor": {
              "profile_path": "agents/signalprocessor_profile.yaml",
              "enabled": true,
              "priority": 1
            },
            "VoiceCommandAgent": {
              "profile_path": "agents/voicecommandagent_profile.yaml",
              "enabled": true,
              "priority": 1
            },
            "RiskManager": {
              "profile_path": "agents/riskmanager_profile.yaml",
              "enabled": true,
              "priority": 1
            }
          }
        }
      },
      "config/coresystemagent_config.yaml": {
        "path": "config/coresystemagent_config.yaml",
        "category": "agents",
        "config": {
          "agent": {
            "name": "CoreSystemAgent",
            "version": "21.7.0",
            "enabled": true
          },
          "settings": {
            "log_level": "INFO",
            "health_check_interval": 60,
            "max_retries": 3,
            "startup_delay": 5,
            "shutdown_timeout": 30
          }
        }
      },
      "config/voicecommandagent_config.yaml": {
        "path": "config/voicecommandagent_config.yaml",
        "category": "agents",
        "config": {
          "agent": {
            "name": "VoiceCommandAgent",
            "version": "21.7.0",
            "enabled": true
          },
          "settings": {
            "wake_word": "ncos",
            "language": "en-US",
            "confidence_threshold": 0.7,
            "max_command_length": 100,
            "timeout": 5
          }
        }
      },
      "config/risk_monitor_agent_config.yaml": {
        "path": "config/risk_monitor_agent_config.yaml",
        "category": "agents",
        "config": {
          "settings": {}
        }
      },
      "config/divergence_strategy_agent_config.yaml": {
        "path": "config/divergence_strategy_agent_config.yaml",
        "category": "agents",
        "config": {
          "settings": {}
        }
      },
      "config/compliance_agent_config.yaml": {
        "path": "config/compliance_agent_config.yaml",
        "category": "agents",
        "config": {
          "settings": {}
        }
      },
      "config/market_manipulation_agent_config.yaml": {
        "path": "config/market_manipulation_agent_config.yaml",
        "category": "agents",
        "config": {
          "settings": {}
        }
      },
      "config/agents/riskmanager_profile.yaml": {
        "path": "config/agents/riskmanager_profile.yaml",
        "category": "agents",
        "config": {
          "profile_name": "RiskManager",
          "description": "Risk management and position monitoring",
          "version": "21.7.0",
          "execution_sequence": [
            "risk_assessment",
            "position_monitor",
            "alert_generator"
          ],
          "code_map": {
            "risk_assessment": "ncos.risk.assessment.RiskAssessment",
            "position_monitor": "ncos.risk.monitor.PositionMonitor",
            "alert_generator": "ncos.risk.alerts.AlertGenerator"
          },
          "meta_agent": {
            "agent_id": "NCOS_Risk_001",
            "strategy_tags": [
              "Risk",
              "Monitor",
              "Alert"
            ],
            "llm_contextualization_enabled": false
          },
          "settings": {
            "log_level": "WARNING",
            "alert_threshold": 0.8,
            "emergency_close_threshold": 0.95,
            "max_drawdown": 0.2,
            "daily_loss_limit": 0.06,
            "correlation_threshold": 0.7,
            "var_confidence": 0.95
          }
        }
      },
      "config/agents/coresystemagent_profile.yaml": {
        "path": "config/agents/coresystemagent_profile.yaml",
        "category": "agents",
        "config": {
          "profile_name": "CoreSystemAgent",
          "description": "Core system orchestration and health monitoring",
          "version": "21.7.0",
          "execution_sequence": [
            "health_check",
            "system_monitor",
            "log_aggregator"
          ],
          "code_map": {
            "health_check": "ncos.core.health_check.HealthChecker",
            "system_monitor": "ncos.core.system_monitor.SystemMonitor",
            "log_aggregator": "ncos.core.log_aggregator.LogAggregator"
          },
          "meta_agent": {
            "agent_id": "NCOS_Core_001",
            "strategy_tags": [
              "System",
              "Health",
              "Monitoring"
            ],
            "llm_contextualization_enabled": false
          },
          "settings": {
            "log_level": "INFO",
            "health_check_interval": 60,
            "max_retries": 3,
            "startup_delay": 5,
            "shutdown_timeout": 30
          }
        }
      },
      "config/agents/marketdatacaptain_profile.yaml": {
        "path": "config/agents/marketdatacaptain_profile.yaml",
        "category": "agents",
        "config": {
          "profile_name": "MarketDataCaptain",
          "description": "Real-time market data ingestion and processing",
          "version": "21.7.0",
          "execution_sequence": [
            "data_ingestion",
            "tick_processor",
            "spread_tracker"
          ],
          "code_map": {
            "data_ingestion": "ncos.data.ingestion.DataIngestion",
            "tick_processor": "ncos.data.tick_processor.TickProcessor",
            "spread_tracker": "ncos.data.spread_tracker.SpreadTracker"
          },
          "meta_agent": {
            "agent_id": "NCOS_Market_001",
            "strategy_tags": [
              "Market",
              "Data",
              "RealTime"
            ],
            "llm_contextualization_enabled": true
          },
          "data_enricher": {
            "enabled": true,
            "spread_settings": {
              "enabled": true,
              "window_size": 25,
              "high_vol_baseline": 0.0008
            },
            "tick_context_settings": {
              "enable_tick_merge": true,
              "journal_tick_context": true
            }
          },
          "settings": {
            "symbols": [
              "XAUUSD",
              "EURUSD",
              "GBPUSD"
            ],
            "timeframes": [
              "M1",
              "M5",
              "M15",
              "H1",
              "H4"
            ],
            "data_source": "live",
            "update_frequency": 1,
            "buffer_size": 1000,
            "flush_interval": 10
          }
        }
      },
      "config/agents/portfoliomanager_profile.yaml": {
        "path": "config/agents/portfoliomanager_profile.yaml",
        "category": "agents",
        "config": {
          "profile_name": "PortfolioManager",
          "description": "Portfolio optimization and position management",
          "version": "21.7.0",
          "execution_sequence": [
            "risk_calculator",
            "position_sizer",
            "portfolio_optimizer"
          ],
          "code_map": {
            "risk_calculator": "ncos.portfolio.risk_calculator.RiskCalculator",
            "position_sizer": "ncos.portfolio.position_sizer.PositionSizer",
            "portfolio_optimizer": "ncos.portfolio.optimizer.PortfolioOptimizer"
          },
          "meta_agent": {
            "agent_id": "NCOS_Portfolio_001",
            "strategy_tags": [
              "Portfolio",
              "Risk",
              "Optimization"
            ],
            "llm_contextualization_enabled": true
          },
          "risk_manager": {
            "enabled": true,
            "max_risk_per_trade": 0.01
          },
          "settings": {
            "max_positions": 10,
            "risk_per_trade": 0.01,
            "max_daily_risk": 0.05,
            "position_sizing_method": "fixed_fractional",
            "rebalance_interval": 3600,
            "risk_check_interval": 300
          }
        }
      },
      "config/agents/voicecommandagent_profile.yaml": {
        "path": "config/agents/voicecommandagent_profile.yaml",
        "category": "agents",
        "config": {
          "profile_name": "VoiceCommandAgent",
          "description": "Natural language voice command processing",
          "version": "21.7.0",
          "execution_sequence": [
            "voice_parser",
            "command_router",
            "response_generator"
          ],
          "code_map": {
            "voice_parser": "ncos.voice.voice_tag_parser.VoiceTagParser",
            "command_router": "ncos.voice.llm_orchestrator.CommandRouter",
            "response_generator": "ncos.voice.response_generator.ResponseGenerator"
          },
          "meta_agent": {
            "agent_id": "NCOS_Voice_001",
            "strategy_tags": [
              "Voice",
              "NLP",
              "Interface"
            ],
            "llm_contextualization_enabled": true
          },
          "settings": {
            "wake_word": "ncos",
            "language": "en-US",
            "confidence_threshold": 0.7,
            "max_command_length": 100,
            "timeout": 5
          }
        }
      },
      "config/agents/signalprocessor_profile.yaml": {
        "path": "config/agents/signalprocessor_profile.yaml",
        "category": "agents",
        "config": {
          "profile_name": "SignalProcessor",
          "description": "Trading signal processing and validation",
          "version": "21.7.0",
          "execution_sequence": [
            "context_analyzer",
            "liquidity_engine",
            "structure_validator",
            "fvg_locator",
            "confluence_stacker"
          ],
          "code_map": {
            "context_analyzer": "ncos.signals.context_analyzer.ContextAnalyzer",
            "liquidity_engine": "ncos.signals.liquidity_engine.LiquidityEngine",
            "structure_validator": "ncos.signals.structure_validator.StructureValidator",
            "fvg_locator": "ncos.signals.fvg_locator.FVGLocator",
            "confluence_stacker": "ncos.signals.confluence_stacker.ConfluenceStacker"
          },
          "meta_agent": {
            "agent_id": "NCOS_Signal_001",
            "strategy_tags": [
              "Signal",
              "Analysis",
              "Validation"
            ],
            "llm_contextualization_enabled": true,
            "memory_embedding_strategy": "on_signal_zbar_summary"
          },
          "context_analyzer": {
            "enabled": true,
            "bias_determination_timeframes": [
              "H1",
              "H4"
            ]
          },
          "liquidity_engine": {
            "enabled": true,
            "lookback_period": 100
          },
          "structure_validator": {
            "enabled": true,
            "swing_engine_config": {
              "swing_n": 1,
              "break_on_close": true
            }
          },
          "settings": {
            "min_confidence": 0.7,
            "signal_types": [
              "entry",
              "exit",
              "adjustment"
            ],
            "cooldown_period": 300,
            "confirmation_required": true,
            "queue_size": 100,
            "processing_threads": 4
          },
          "journaling": {
            "verbosity": "detailed",
            "enable_zbar_format": true,
            "log_directory": "/logs/signals/"
          }
        }
      },
      "agents/predictive/config/predictive_engine_config.yaml": {
        "path": "agents/predictive/config/predictive_engine_config.yaml",
        "category": "agents",
        "config": {
          "engine": {
            "name": "Neural Predictive Engine",
            "version": "21.7",
            "mode": "enhanced",
            "neural_depth": 5,
            "pattern_matching": {
              "enabled": true,
              "min_confidence": 0.75,
              "max_patterns": 1000
            }
          },
          "models": {
            "primary": {
              "type": "transformer",
              "parameters": {
                "layers": 12,
                "hidden_size": 768,
                "attention_heads": 12
              }
            },
            "secondary": {
              "type": "lstm",
              "parameters": {
                "units": 512,
                "dropout": 0.2
              }
            }
          },
          "prediction_params": {
            "time_window": "24h",
            "update_frequency": "5m",
            "confidence_threshold": 0.8,
            "max_predictions": 100
          },
          "data_sources": {
            "system_metrics": {
              "enabled": true,
              "sampling_rate": "1s"
            },
            "user_behavior": {
              "enabled": true,
              "anonymized": true
            },
            "external_feeds": {
              "enabled": false,
              "sources": []
            }
          },
          "output": {
            "format": "structured",
            "include_confidence": true,
            "include_reasoning": true
          },
          "optimization": {
            "caching": {
              "enabled": true,
              "ttl": 3600
            },
            "batch_processing": {
              "enabled": true,
              "batch_size": 32
            }
          },
          "logging": {
            "level": "INFO",
            "destinations": [
              "file",
              "monitoring"
            ],
            "rotation": {
              "enabled": true,
              "max_size": "100MB",
              "max_files": 5
            }
          },
          "journaling": {
            "enabled": true,
            "path": "/var/log/ncOS/predictive",
            "format": "structured_json",
            "retention_days": 30
          },
          "data_enrichment": {
            "metadata_extraction": true,
            "pattern_analysis": true,
            "anomaly_detection": true
          }
        }
      }
    }
  }
}